version: '3.8'
services:
  postgres:
    image: postgres:15
    container_name: foodflow-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - foodflow-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: foodflow-backend
    environment:
      - SERVER_PORT=${SERVER_PORT}
      - SPRING_DATASOURCE_URL=jdbc:postgresql://${DB_HOST}:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
    ports:
      - "${SERVER_PORT}:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - foodflow-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: foodflow-frontend
    environment:
      - REACT_APP_API_BASE_URL=${REACT_APP_API_BASE_URL}
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - foodflow-network

  prometheus:
    image: prom/prometheus:latest
    container_name: foodflow-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus.yml
    command:
      - '--config.file=/etc/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - foodflow-network

  grafana:
    image: grafana/grafana:latest
    container_name: foodflow-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    networks:
      - foodflow-network


volumes:
  postgres_data:
  grafana_data:

networks:
  foodflow-network:
    driver: bridge
