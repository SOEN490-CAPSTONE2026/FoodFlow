name: CI/CD Pipeline

on:
  push:
    branches:
      - 'main'
      - 'cicd'
  pull_request:
    branches:
      - 'main'

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: ./frontend/package-lock.json

      - name: Install frontend dependencies
        run: npm install
        working-directory: ./frontend

  frontend-test:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Build frontend
        run: npm run build
        working-directory: ./frontend

      - name: Run frontend tests
        run: npm test -- --watchAll=false
        working-directory: ./frontend
  
  #test:
  #  runs-on: ubuntu-latest
  #  services:
  #    prometheus:
  #      image: prom/prometheus:latest
  #      container_name: foodflow-prometheus
  #      ports:
  #        - "9090:9090"
  #      volumes:
  #        - ./monitoring/prometheus.yml:/etc/prometheus.yml
  #      options: >-
  #        --health-cmd="curl --fail http://localhost:9090/-/ready || exit 1"
  #        --health-interval=10s
  #        --health-timeout=5s
  #        --health-retries=5
  #
  #    grafana:
  #      image: grafana/grafana:latest
  #      container_name: foodflow-grafana
  #      ports:
  #        - "3001:3000"
  #      volumes:
  #        - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
  #        - grafana_data:/var/lib/grafana
  #      options: >-
  #        --health-cmd="curl --fail http://localhost:3001/api/health || exit 1"
  #        --health-interval=10s
  #        --health-timeout=5s
  #        --health-retries=5
  #
  #      steps:
  #        - name: Verify Prometheus is running
  #          run: |
  #            for i in {1..5}; do
  #              curl --fail http://localhost:9090/-/ready && break
  #              echo "Waiting for Prometheus to be ready..."
  #              sleep 10
  #            done
  #
  #        - name: Verify Grafana is running
  #          run: |
  #            for i in {1..5}; do
  #              curl --fail http://localhost:3000/api/health && break
  #              echo "Waiting for Grafana to be ready..."
  #              sleep 10
  #            done
  #
  #        - name: Check Prometheus targets
  #          run: curl --fail http://localhost:9090/api/v1/targets
  #
  #
  #        - name: Check Grafana dashboard
  #          run: curl --fail http://localhost:3001/api/dashboards/uid/foodflow-api